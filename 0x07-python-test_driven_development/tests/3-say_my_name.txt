## How to Use 3-say_my_name.py
This modules defines a function ``say_my_name(first_name, last_name="")``.

## Usage

``say_my_name(...)`` prints "My name is <first_name> <last_name>".
::
>>> say_my_name = __import__('3-say_my_name').say_my_name
>>> say_my_name("femi", "web")
My name is femi web
::
>>> say_my_name("lord of", "The flies")
My name is lord of the files
The parameter ```last_name``` is optional
::
>>> say_my_name("femi")
My name is femi

## Invalid Names
TypeError: first_name must be a string
::
>>> say_my_name("femi", ["baba", "coker", "abram"])
Traceback (most recent call last):
TypeError: last_name must be a string
::
>>> say_my_name({"femi": 8, "baba": 34}, 6.9)
Traceback (most recent call last):

``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.
::
>>> say_my_name(2, "femi")
Traceback (most recent call last):

TypeError: first_name must be a string
::
>>> say_my_name(None)
Traceback (most recent call last):
TypeError: first_name must be a string
At least one name must be provided.
::
>>> say_my_name()
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
