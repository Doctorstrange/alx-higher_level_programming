## How to Use 2-matrix_divided.py

This module defines a matrix division function ``matrix_divided(matrix, div)``.


## Usage

``matrix_divided(...)`` returns a new matrix that is a copy
``matrix`` all elements divided by ``div``.
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [2, 4, 6],
... [12, 17, 19]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

The original matrix is left unchanged.
::
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]



The function can also handle floating-point numbers.
::
>>> matrix = [
... [1.8, -2.5, 3.6],
... [4.3, 7.2, -8.4]
... ]
>>> print(matrix_divided(matrix, 5))
[[0.36, -0.5, 0.72], [0.86, 1.44, -1.68]]

Note that quotients are rounded to a maximum of two decimal places.
::
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5], [2, 2.5, 3.0]]




##Invalid Divisors

The parameter ``div`` must be either an int or float
is raised.
::
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
TypeError: div must be a number
::
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
TypeError: div must be a number
``div`` must also be non-zero
::
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero



## Invalid Matrices

The parameter ``matrix`` must be a list of lists
::
>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):


TypeError: matrix must be a matrix (list of lists)
::
>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats



TypeError is raised if ``matrix`` is not specifically a list of
lists.
::
>>> matrix = [1, 2, 3, 4]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


rows in ``matrix`` must be the same size
::
>>> matrix = [
... [1, 2, 3, 4],
... [5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

######
